// Generated by view binder compiler. Do not edit!
package domanska.klaudia.lab_11_15.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import domanska.klaudia.lab_11_15.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRefuellingDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView refuellingConsumption;

  @NonNull
  public final TextView refuellingConsumptionTextView;

  @NonNull
  public final TextView refuellingDate;

  @NonNull
  public final TextView refuellingDateTextView;

  @NonNull
  public final TextView refuellingDistance;

  @NonNull
  public final TextView refuellingDistanceTextView;

  @NonNull
  public final TextView refuellingMileage;

  @NonNull
  public final TextView refuellingMileageTextView;

  @NonNull
  public final TextView refuellingPlace;

  @NonNull
  public final TextView refuellingPlaceTextView;

  @NonNull
  public final TextView refuellingPrice;

  @NonNull
  public final TextView refuellingPricePerLiter;

  @NonNull
  public final TextView refuellingPricePerLiterTextView;

  @NonNull
  public final TextView refuellingPriceTextView;

  private FragmentRefuellingDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView refuellingConsumption, @NonNull TextView refuellingConsumptionTextView,
      @NonNull TextView refuellingDate, @NonNull TextView refuellingDateTextView,
      @NonNull TextView refuellingDistance, @NonNull TextView refuellingDistanceTextView,
      @NonNull TextView refuellingMileage, @NonNull TextView refuellingMileageTextView,
      @NonNull TextView refuellingPlace, @NonNull TextView refuellingPlaceTextView,
      @NonNull TextView refuellingPrice, @NonNull TextView refuellingPricePerLiter,
      @NonNull TextView refuellingPricePerLiterTextView,
      @NonNull TextView refuellingPriceTextView) {
    this.rootView = rootView;
    this.refuellingConsumption = refuellingConsumption;
    this.refuellingConsumptionTextView = refuellingConsumptionTextView;
    this.refuellingDate = refuellingDate;
    this.refuellingDateTextView = refuellingDateTextView;
    this.refuellingDistance = refuellingDistance;
    this.refuellingDistanceTextView = refuellingDistanceTextView;
    this.refuellingMileage = refuellingMileage;
    this.refuellingMileageTextView = refuellingMileageTextView;
    this.refuellingPlace = refuellingPlace;
    this.refuellingPlaceTextView = refuellingPlaceTextView;
    this.refuellingPrice = refuellingPrice;
    this.refuellingPricePerLiter = refuellingPricePerLiter;
    this.refuellingPricePerLiterTextView = refuellingPricePerLiterTextView;
    this.refuellingPriceTextView = refuellingPriceTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRefuellingDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRefuellingDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_refuelling_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRefuellingDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.refuelling_consumption;
      TextView refuellingConsumption = ViewBindings.findChildViewById(rootView, id);
      if (refuellingConsumption == null) {
        break missingId;
      }

      id = R.id.refuelling_consumption_text_view;
      TextView refuellingConsumptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (refuellingConsumptionTextView == null) {
        break missingId;
      }

      id = R.id.refuelling_date;
      TextView refuellingDate = ViewBindings.findChildViewById(rootView, id);
      if (refuellingDate == null) {
        break missingId;
      }

      id = R.id.refuelling_date_text_view;
      TextView refuellingDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (refuellingDateTextView == null) {
        break missingId;
      }

      id = R.id.refuelling_distance;
      TextView refuellingDistance = ViewBindings.findChildViewById(rootView, id);
      if (refuellingDistance == null) {
        break missingId;
      }

      id = R.id.refuelling_distance_text_view;
      TextView refuellingDistanceTextView = ViewBindings.findChildViewById(rootView, id);
      if (refuellingDistanceTextView == null) {
        break missingId;
      }

      id = R.id.refuelling_mileage;
      TextView refuellingMileage = ViewBindings.findChildViewById(rootView, id);
      if (refuellingMileage == null) {
        break missingId;
      }

      id = R.id.refuelling_mileage_text_view;
      TextView refuellingMileageTextView = ViewBindings.findChildViewById(rootView, id);
      if (refuellingMileageTextView == null) {
        break missingId;
      }

      id = R.id.refuelling_place;
      TextView refuellingPlace = ViewBindings.findChildViewById(rootView, id);
      if (refuellingPlace == null) {
        break missingId;
      }

      id = R.id.refuelling_place_text_view;
      TextView refuellingPlaceTextView = ViewBindings.findChildViewById(rootView, id);
      if (refuellingPlaceTextView == null) {
        break missingId;
      }

      id = R.id.refuelling_price;
      TextView refuellingPrice = ViewBindings.findChildViewById(rootView, id);
      if (refuellingPrice == null) {
        break missingId;
      }

      id = R.id.refuelling_price_per_liter;
      TextView refuellingPricePerLiter = ViewBindings.findChildViewById(rootView, id);
      if (refuellingPricePerLiter == null) {
        break missingId;
      }

      id = R.id.refuelling_price_per_liter_textView;
      TextView refuellingPricePerLiterTextView = ViewBindings.findChildViewById(rootView, id);
      if (refuellingPricePerLiterTextView == null) {
        break missingId;
      }

      id = R.id.refuelling_price_text_view;
      TextView refuellingPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (refuellingPriceTextView == null) {
        break missingId;
      }

      return new FragmentRefuellingDetailsBinding((ConstraintLayout) rootView,
          refuellingConsumption, refuellingConsumptionTextView, refuellingDate,
          refuellingDateTextView, refuellingDistance, refuellingDistanceTextView, refuellingMileage,
          refuellingMileageTextView, refuellingPlace, refuellingPlaceTextView, refuellingPrice,
          refuellingPricePerLiter, refuellingPricePerLiterTextView, refuellingPriceTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
