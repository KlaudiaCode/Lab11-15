// Generated by view binder compiler. Do not edit!
package domanska.klaudia.lab_11_15.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import domanska.klaudia.lab_11_15.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVehicleFormBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addVehicleButton;

  @NonNull
  public final EditText brandInput;

  @NonNull
  public final EditText checkDateInput;

  @NonNull
  public final EditText modelInput;

  @NonNull
  public final EditText plateNumberInput;

  private FragmentVehicleFormBinding(@NonNull LinearLayout rootView,
      @NonNull Button addVehicleButton, @NonNull EditText brandInput,
      @NonNull EditText checkDateInput, @NonNull EditText modelInput,
      @NonNull EditText plateNumberInput) {
    this.rootView = rootView;
    this.addVehicleButton = addVehicleButton;
    this.brandInput = brandInput;
    this.checkDateInput = checkDateInput;
    this.modelInput = modelInput;
    this.plateNumberInput = plateNumberInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVehicleFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVehicleFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_vehicle_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVehicleFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_vehicle_button;
      Button addVehicleButton = ViewBindings.findChildViewById(rootView, id);
      if (addVehicleButton == null) {
        break missingId;
      }

      id = R.id.brand_input;
      EditText brandInput = ViewBindings.findChildViewById(rootView, id);
      if (brandInput == null) {
        break missingId;
      }

      id = R.id.check_date_input;
      EditText checkDateInput = ViewBindings.findChildViewById(rootView, id);
      if (checkDateInput == null) {
        break missingId;
      }

      id = R.id.model_input;
      EditText modelInput = ViewBindings.findChildViewById(rootView, id);
      if (modelInput == null) {
        break missingId;
      }

      id = R.id.plate_number_input;
      EditText plateNumberInput = ViewBindings.findChildViewById(rootView, id);
      if (plateNumberInput == null) {
        break missingId;
      }

      return new FragmentVehicleFormBinding((LinearLayout) rootView, addVehicleButton, brandInput,
          checkDateInput, modelInput, plateNumberInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
