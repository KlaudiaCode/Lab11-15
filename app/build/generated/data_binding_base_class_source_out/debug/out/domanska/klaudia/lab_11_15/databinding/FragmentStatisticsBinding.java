// Generated by view binder compiler. Do not edit!
package domanska.klaudia.lab_11_15.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import domanska.klaudia.lab_11_15.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStatisticsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView averageConsumptionTextView;

  @NonNull
  public final TextView averageExpenses;

  @NonNull
  public final TextView averageExpensesTextView;

  @NonNull
  public final TextView day120Consumption;

  @NonNull
  public final TextView day120ConsumptionTextView;

  @NonNull
  public final TextView day30Consumption;

  @NonNull
  public final TextView day30ConsumptionTextView;

  @NonNull
  public final TextView day365Consumption;

  @NonNull
  public final TextView day365ConsumptionTextView;

  @NonNull
  public final TextView favouritePlace;

  @NonNull
  public final TextView favouritePlaceTextView;

  @NonNull
  public final TextView maxConsumption;

  @NonNull
  public final TextView maxConsumptionTextView;

  @NonNull
  public final TextView minConsumption;

  @NonNull
  public final TextView minConsumptionTextView;

  private FragmentStatisticsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView averageConsumptionTextView, @NonNull TextView averageExpenses,
      @NonNull TextView averageExpensesTextView, @NonNull TextView day120Consumption,
      @NonNull TextView day120ConsumptionTextView, @NonNull TextView day30Consumption,
      @NonNull TextView day30ConsumptionTextView, @NonNull TextView day365Consumption,
      @NonNull TextView day365ConsumptionTextView, @NonNull TextView favouritePlace,
      @NonNull TextView favouritePlaceTextView, @NonNull TextView maxConsumption,
      @NonNull TextView maxConsumptionTextView, @NonNull TextView minConsumption,
      @NonNull TextView minConsumptionTextView) {
    this.rootView = rootView;
    this.averageConsumptionTextView = averageConsumptionTextView;
    this.averageExpenses = averageExpenses;
    this.averageExpensesTextView = averageExpensesTextView;
    this.day120Consumption = day120Consumption;
    this.day120ConsumptionTextView = day120ConsumptionTextView;
    this.day30Consumption = day30Consumption;
    this.day30ConsumptionTextView = day30ConsumptionTextView;
    this.day365Consumption = day365Consumption;
    this.day365ConsumptionTextView = day365ConsumptionTextView;
    this.favouritePlace = favouritePlace;
    this.favouritePlaceTextView = favouritePlaceTextView;
    this.maxConsumption = maxConsumption;
    this.maxConsumptionTextView = maxConsumptionTextView;
    this.minConsumption = minConsumption;
    this.minConsumptionTextView = minConsumptionTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStatisticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStatisticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_statistics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStatisticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.average_consumption_text_view;
      TextView averageConsumptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (averageConsumptionTextView == null) {
        break missingId;
      }

      id = R.id.average_expenses;
      TextView averageExpenses = ViewBindings.findChildViewById(rootView, id);
      if (averageExpenses == null) {
        break missingId;
      }

      id = R.id.average_expenses_text_view;
      TextView averageExpensesTextView = ViewBindings.findChildViewById(rootView, id);
      if (averageExpensesTextView == null) {
        break missingId;
      }

      id = R.id.day_120_consumption;
      TextView day120Consumption = ViewBindings.findChildViewById(rootView, id);
      if (day120Consumption == null) {
        break missingId;
      }

      id = R.id.day_120_consumption_text_view;
      TextView day120ConsumptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (day120ConsumptionTextView == null) {
        break missingId;
      }

      id = R.id.day_30_consumption;
      TextView day30Consumption = ViewBindings.findChildViewById(rootView, id);
      if (day30Consumption == null) {
        break missingId;
      }

      id = R.id.day_30_consumption_text_view;
      TextView day30ConsumptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (day30ConsumptionTextView == null) {
        break missingId;
      }

      id = R.id.day_365_consumption;
      TextView day365Consumption = ViewBindings.findChildViewById(rootView, id);
      if (day365Consumption == null) {
        break missingId;
      }

      id = R.id.day_365_consumption_text_view;
      TextView day365ConsumptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (day365ConsumptionTextView == null) {
        break missingId;
      }

      id = R.id.favourite_place;
      TextView favouritePlace = ViewBindings.findChildViewById(rootView, id);
      if (favouritePlace == null) {
        break missingId;
      }

      id = R.id.favourite_place_text_view;
      TextView favouritePlaceTextView = ViewBindings.findChildViewById(rootView, id);
      if (favouritePlaceTextView == null) {
        break missingId;
      }

      id = R.id.max_consumption;
      TextView maxConsumption = ViewBindings.findChildViewById(rootView, id);
      if (maxConsumption == null) {
        break missingId;
      }

      id = R.id.max_consumption_text_view;
      TextView maxConsumptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (maxConsumptionTextView == null) {
        break missingId;
      }

      id = R.id.min_consumption;
      TextView minConsumption = ViewBindings.findChildViewById(rootView, id);
      if (minConsumption == null) {
        break missingId;
      }

      id = R.id.min_consumption_text_view;
      TextView minConsumptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (minConsumptionTextView == null) {
        break missingId;
      }

      return new FragmentStatisticsBinding((ConstraintLayout) rootView, averageConsumptionTextView,
          averageExpenses, averageExpensesTextView, day120Consumption, day120ConsumptionTextView,
          day30Consumption, day30ConsumptionTextView, day365Consumption, day365ConsumptionTextView,
          favouritePlace, favouritePlaceTextView, maxConsumption, maxConsumptionTextView,
          minConsumption, minConsumptionTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
